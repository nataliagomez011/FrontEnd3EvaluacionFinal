{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Natalia G\\xF3mez Rojas\\\\Downloads\\\\Front End 3\\\\fe3-final-main\\\\fe3-final-main\\\\src\\\\Components\\\\utils\\\\global.context.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext(); // Crear el contexto\n\nconst initialState = {\n  theme: 'light',\n  apiData: null\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'TOGGLE_THEME':\n      return { ...state,\n        theme: state.theme === 'light' ? 'dark' : 'light'\n      };\n\n    case 'SET_API_DATA':\n      return { ...state,\n        apiData: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst AppProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [theme, setTheme] = useState('light'); // Estado del tema\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light'); // Cambiar entre temas\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme,\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AppProvider, \"iWjBTCiiItLzQFnLu9q+qiTwfp4=\");\n\n_c = AppProvider;\nexport { ThemeContext, AppProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useState","useReducer","ThemeContext","initialState","theme","apiData","reducer","state","action","type","payload","AppProvider","children","setTheme","dispatch","toggleTheme","prevTheme"],"sources":["C:/Users/Natalia GÃ³mez Rojas/Downloads/Front End 3/fe3-final-main/fe3-final-main/src/Components/utils/global.context.jsx"],"sourcesContent":["import React, { createContext, useState, useReducer } from 'react';\n\nconst ThemeContext = createContext(); // Crear el contexto\n\nconst initialState = {\n  theme: 'light',\n  apiData: null\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'TOGGLE_THEME':\n      return {\n        ...state,\n        theme: state.theme === 'light' ? 'dark' : 'light'\n      };\n    case 'SET_API_DATA':\n      return {\n        ...state,\n        apiData: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nconst AppProvider = ({ children }) => {\n  const [theme, setTheme] = useState('light'); // Estado del tema\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light'); // Cambiar entre temas\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme, state, dispatch }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport { ThemeContext, AppProvider };\n\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,UAAzC,QAA2D,OAA3D;;AAEA,MAAMC,YAAY,gBAAGH,aAAa,EAAlC,C,CAAsC;;AAEtC,MAAMI,YAAY,GAAG;EACnBC,KAAK,EAAE,OADY;EAEnBC,OAAO,EAAE;AAFU,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACjC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,cAAL;MACE,OAAO,EACL,GAAGF,KADE;QAELH,KAAK,EAAEG,KAAK,CAACH,KAAN,KAAgB,OAAhB,GAA0B,MAA1B,GAAmC;MAFrC,CAAP;;IAIF,KAAK,cAAL;MACE,OAAO,EACL,GAAGG,KADE;QAELF,OAAO,EAAEG,MAAM,CAACE;MAFX,CAAP;;IAIF;MACE,OAAOH,KAAP;EAZJ;AAcD,CAfD;;AAiBA,MAAMI,WAAW,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACpC,MAAM,CAACR,KAAD,EAAQS,QAAR,IAAoBb,QAAQ,CAAC,OAAD,CAAlC,CADoC,CACS;;EAC7C,MAAM,CAACO,KAAD,EAAQO,QAAR,IAAoBb,UAAU,CAACK,OAAD,EAAUH,YAAV,CAApC;;EAEA,MAAMY,WAAW,GAAG,MAAM;IACxBF,QAAQ,CAACG,SAAS,IAAIA,SAAS,KAAK,OAAd,GAAwB,MAAxB,GAAiC,OAA/C,CAAR,CADwB,CACyC;EAClE,CAFD;;EAIA,oBACE,QAAC,YAAD,CAAc,QAAd;IAAuB,KAAK,EAAE;MAAEZ,KAAF;MAASW,WAAT;MAAsBR,KAAtB;MAA6BO;IAA7B,CAA9B;IAAA,UACGF;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAbD;;GAAMD,W;;KAAAA,W;AAeN,SAAST,YAAT,EAAuBS,WAAvB"},"metadata":{},"sourceType":"module"}